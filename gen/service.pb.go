// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: service.proto

package gen

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/mwitkow/go-proto-validators"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//
//|  Enums
type St int32

const (
	St_sd St = 0
	St_sc St = 1
)

var St_name = map[int32]string{
	0: "sd",
	1: "sc",
}

var St_value = map[string]int32{
	"sd": 0,
	"sc": 1,
}

func (x St) String() string {
	return proto.EnumName(St_name, int32(x))
}

func (St) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

//
//|  Structs
type Login2FARequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Mobile               string   `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login2FARequest) Reset()         { *m = Login2FARequest{} }
func (m *Login2FARequest) String() string { return proto.CompactTextString(m) }
func (*Login2FARequest) ProtoMessage()    {}
func (*Login2FARequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}
func (m *Login2FARequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Login2FARequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Login2FARequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Login2FARequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login2FARequest.Merge(m, src)
}
func (m *Login2FARequest) XXX_Size() int {
	return m.Size()
}
func (m *Login2FARequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Login2FARequest.DiscardUnknown(m)
}

var xxx_messageInfo_Login2FARequest proto.InternalMessageInfo

func (m *Login2FARequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Login2FARequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (*Login2FARequest) XXX_MessageName() string {
	return "ovo.Login2FARequest"
}

type Login2FAResponse struct {
	RefId                string   `protobuf:"bytes,1,opt,name=refId,proto3" json:"refId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login2FAResponse) Reset()         { *m = Login2FAResponse{} }
func (m *Login2FAResponse) String() string { return proto.CompactTextString(m) }
func (*Login2FAResponse) ProtoMessage()    {}
func (*Login2FAResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}
func (m *Login2FAResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Login2FAResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Login2FAResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Login2FAResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login2FAResponse.Merge(m, src)
}
func (m *Login2FAResponse) XXX_Size() int {
	return m.Size()
}
func (m *Login2FAResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Login2FAResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Login2FAResponse proto.InternalMessageInfo

func (m *Login2FAResponse) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (*Login2FAResponse) XXX_MessageName() string {
	return "ovo.Login2FAResponse"
}

//
type Login2FAVerifyRequest struct {
	DeviceId             string   `protobuf:"bytes,1,opt,name=deviceId,proto3" json:"deviceId,omitempty"`
	Mobile               string   `protobuf:"bytes,2,opt,name=mobile,proto3" json:"mobile,omitempty"`
	RefId                string   `protobuf:"bytes,3,opt,name=refId,proto3" json:"refId,omitempty"`
	AppVersion           string   `protobuf:"bytes,4,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	MacAddress           string   `protobuf:"bytes,5,opt,name=macAddress,proto3" json:"macAddress,omitempty"`
	OsName               string   `protobuf:"bytes,6,opt,name=osName,proto3" json:"osName,omitempty"`
	OsVersion            string   `protobuf:"bytes,7,opt,name=osVersion,proto3" json:"osVersion,omitempty"`
	PushNotificationId   string   `protobuf:"bytes,8,opt,name=pushNotificationId,proto3" json:"pushNotificationId,omitempty"`
	VerificationCode     string   `protobuf:"bytes,9,opt,name=verificationCode,proto3" json:"verificationCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login2FAVerifyRequest) Reset()         { *m = Login2FAVerifyRequest{} }
func (m *Login2FAVerifyRequest) String() string { return proto.CompactTextString(m) }
func (*Login2FAVerifyRequest) ProtoMessage()    {}
func (*Login2FAVerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}
func (m *Login2FAVerifyRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Login2FAVerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Login2FAVerifyRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Login2FAVerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login2FAVerifyRequest.Merge(m, src)
}
func (m *Login2FAVerifyRequest) XXX_Size() int {
	return m.Size()
}
func (m *Login2FAVerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_Login2FAVerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_Login2FAVerifyRequest proto.InternalMessageInfo

func (m *Login2FAVerifyRequest) GetDeviceId() string {
	if m != nil {
		return m.DeviceId
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetRefId() string {
	if m != nil {
		return m.RefId
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetAppVersion() string {
	if m != nil {
		return m.AppVersion
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetMacAddress() string {
	if m != nil {
		return m.MacAddress
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetOsName() string {
	if m != nil {
		return m.OsName
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetOsVersion() string {
	if m != nil {
		return m.OsVersion
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetPushNotificationId() string {
	if m != nil {
		return m.PushNotificationId
	}
	return ""
}

func (m *Login2FAVerifyRequest) GetVerificationCode() string {
	if m != nil {
		return m.VerificationCode
	}
	return ""
}

func (*Login2FAVerifyRequest) XXX_MessageName() string {
	return "ovo.Login2FAVerifyRequest"
}

type Login2FAVerifyResponse struct {
	Mobile               string   `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	FullName             string   `protobuf:"bytes,3,opt,name=fullName,proto3" json:"fullName,omitempty"`
	IsEmailVerified      bool     `protobuf:"varint,4,opt,name=isEmailVerified,proto3" json:"isEmailVerified,omitempty"`
	IsSecurityCodeSet    bool     `protobuf:"varint,5,opt,name=isSecurityCodeSet,proto3" json:"isSecurityCodeSet,omitempty"`
	UpdateAccessToken    string   `protobuf:"bytes,6,opt,name=updateAccessToken,proto3" json:"updateAccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Login2FAVerifyResponse) Reset()         { *m = Login2FAVerifyResponse{} }
func (m *Login2FAVerifyResponse) String() string { return proto.CompactTextString(m) }
func (*Login2FAVerifyResponse) ProtoMessage()    {}
func (*Login2FAVerifyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}
func (m *Login2FAVerifyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Login2FAVerifyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Login2FAVerifyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Login2FAVerifyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Login2FAVerifyResponse.Merge(m, src)
}
func (m *Login2FAVerifyResponse) XXX_Size() int {
	return m.Size()
}
func (m *Login2FAVerifyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_Login2FAVerifyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_Login2FAVerifyResponse proto.InternalMessageInfo

func (m *Login2FAVerifyResponse) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Login2FAVerifyResponse) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Login2FAVerifyResponse) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Login2FAVerifyResponse) GetIsEmailVerified() bool {
	if m != nil {
		return m.IsEmailVerified
	}
	return false
}

func (m *Login2FAVerifyResponse) GetIsSecurityCodeSet() bool {
	if m != nil {
		return m.IsSecurityCodeSet
	}
	return false
}

func (m *Login2FAVerifyResponse) GetUpdateAccessToken() string {
	if m != nil {
		return m.UpdateAccessToken
	}
	return ""
}

func (*Login2FAVerifyResponse) XXX_MessageName() string {
	return "ovo.Login2FAVerifyResponse"
}

//
type LoginSecurityCodeRequest struct {
	DeviceUnixtime       int64    `protobuf:"varint,1,opt,name=deviceUnixtime,proto3" json:"deviceUnixtime,omitempty"`
	SecurityCode         string   `protobuf:"bytes,2,opt,name=securityCode,proto3" json:"securityCode,omitempty"`
	UpdateAccessToken    string   `protobuf:"bytes,3,opt,name=updateAccessToken,proto3" json:"updateAccessToken,omitempty"`
	Message              string   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginSecurityCodeRequest) Reset()         { *m = LoginSecurityCodeRequest{} }
func (m *LoginSecurityCodeRequest) String() string { return proto.CompactTextString(m) }
func (*LoginSecurityCodeRequest) ProtoMessage()    {}
func (*LoginSecurityCodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}
func (m *LoginSecurityCodeRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoginSecurityCodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoginSecurityCodeRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoginSecurityCodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginSecurityCodeRequest.Merge(m, src)
}
func (m *LoginSecurityCodeRequest) XXX_Size() int {
	return m.Size()
}
func (m *LoginSecurityCodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginSecurityCodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginSecurityCodeRequest proto.InternalMessageInfo

func (m *LoginSecurityCodeRequest) GetDeviceUnixtime() int64 {
	if m != nil {
		return m.DeviceUnixtime
	}
	return 0
}

func (m *LoginSecurityCodeRequest) GetSecurityCode() string {
	if m != nil {
		return m.SecurityCode
	}
	return ""
}

func (m *LoginSecurityCodeRequest) GetUpdateAccessToken() string {
	if m != nil {
		return m.UpdateAccessToken
	}
	return ""
}

func (m *LoginSecurityCodeRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (*LoginSecurityCodeRequest) XXX_MessageName() string {
	return "ovo.LoginSecurityCodeRequest"
}

type LoginSecurityCodeResponse struct {
	Token              string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TokenSeed          string `protobuf:"bytes,2,opt,name=tokenSeed,proto3" json:"tokenSeed,omitempty"`
	Timestamp          int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	TokenSeedExpiredAt int64  `protobuf:"varint,4,opt,name=tokenSeedExpiredAt,proto3" json:"tokenSeedExpiredAt,omitempty"`
	DisplayMessage     string `protobuf:"bytes,5,opt,name=displayMessage,proto3" json:"displayMessage,omitempty"`
	//email = 6
	//fullName = 7
	IsEmailVerified      bool     `protobuf:"varint,8,opt,name=isEmailVerified,proto3" json:"isEmailVerified,omitempty"`
	UpdateAccessToken    string   `protobuf:"bytes,9,opt,name=updateAccessToken,proto3" json:"updateAccessToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginSecurityCodeResponse) Reset()         { *m = LoginSecurityCodeResponse{} }
func (m *LoginSecurityCodeResponse) String() string { return proto.CompactTextString(m) }
func (*LoginSecurityCodeResponse) ProtoMessage()    {}
func (*LoginSecurityCodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}
func (m *LoginSecurityCodeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LoginSecurityCodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LoginSecurityCodeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LoginSecurityCodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginSecurityCodeResponse.Merge(m, src)
}
func (m *LoginSecurityCodeResponse) XXX_Size() int {
	return m.Size()
}
func (m *LoginSecurityCodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginSecurityCodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoginSecurityCodeResponse proto.InternalMessageInfo

func (m *LoginSecurityCodeResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *LoginSecurityCodeResponse) GetTokenSeed() string {
	if m != nil {
		return m.TokenSeed
	}
	return ""
}

func (m *LoginSecurityCodeResponse) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *LoginSecurityCodeResponse) GetTokenSeedExpiredAt() int64 {
	if m != nil {
		return m.TokenSeedExpiredAt
	}
	return 0
}

func (m *LoginSecurityCodeResponse) GetDisplayMessage() string {
	if m != nil {
		return m.DisplayMessage
	}
	return ""
}

func (m *LoginSecurityCodeResponse) GetIsEmailVerified() bool {
	if m != nil {
		return m.IsEmailVerified
	}
	return false
}

func (m *LoginSecurityCodeResponse) GetUpdateAccessToken() string {
	if m != nil {
		return m.UpdateAccessToken
	}
	return ""
}

func (*LoginSecurityCodeResponse) XXX_MessageName() string {
	return "ovo.LoginSecurityCodeResponse"
}

//
type Budget struct {
	Amount               int64    `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Budget) Reset()         { *m = Budget{} }
func (m *Budget) String() string { return proto.CompactTextString(m) }
func (*Budget) ProtoMessage()    {}
func (*Budget) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}
func (m *Budget) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Budget) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Budget.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Budget) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Budget.Merge(m, src)
}
func (m *Budget) XXX_Size() int {
	return m.Size()
}
func (m *Budget) XXX_DiscardUnknown() {
	xxx_messageInfo_Budget.DiscardUnknown(m)
}

var xxx_messageInfo_Budget proto.InternalMessageInfo

func (m *Budget) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (*Budget) XXX_MessageName() string {
	return "ovo.Budget"
}

type GetBudgetRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBudgetRequest) Reset()         { *m = GetBudgetRequest{} }
func (m *GetBudgetRequest) String() string { return proto.CompactTextString(m) }
func (*GetBudgetRequest) ProtoMessage()    {}
func (*GetBudgetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{7}
}
func (m *GetBudgetRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBudgetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBudgetRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBudgetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBudgetRequest.Merge(m, src)
}
func (m *GetBudgetRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetBudgetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBudgetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBudgetRequest proto.InternalMessageInfo

func (*GetBudgetRequest) XXX_MessageName() string {
	return "ovo.GetBudgetRequest"
}

type GetBudgetResponse struct {
	Budget        *Budget `protobuf:"bytes,1,opt,name=budget,proto3" json:"budget,omitempty"`
	TotalSpending int64   `protobuf:"varint,2,opt,name=totalSpending,proto3" json:"totalSpending,omitempty"`
	//cycleDate ?
	Summary              []*Budget `protobuf:"bytes,3,rep,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetBudgetResponse) Reset()         { *m = GetBudgetResponse{} }
func (m *GetBudgetResponse) String() string { return proto.CompactTextString(m) }
func (*GetBudgetResponse) ProtoMessage()    {}
func (*GetBudgetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{8}
}
func (m *GetBudgetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetBudgetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetBudgetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetBudgetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBudgetResponse.Merge(m, src)
}
func (m *GetBudgetResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetBudgetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBudgetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBudgetResponse proto.InternalMessageInfo

func (m *GetBudgetResponse) GetBudget() *Budget {
	if m != nil {
		return m.Budget
	}
	return nil
}

func (m *GetBudgetResponse) GetTotalSpending() int64 {
	if m != nil {
		return m.TotalSpending
	}
	return 0
}

func (m *GetBudgetResponse) GetSummary() []*Budget {
	if m != nil {
		return m.Summary
	}
	return nil
}

func (*GetBudgetResponse) XXX_MessageName() string {
	return "ovo.GetBudgetResponse"
}

//
type Balance struct {
	CardBalance          int64    `protobuf:"varint,1,opt,name=card_balance,json=cardBalance,proto3" json:"card_balance,omitempty"`
	CardNo               string   `protobuf:"bytes,2,opt,name=card_no,json=cardNo,proto3" json:"card_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Balance) Reset()         { *m = Balance{} }
func (m *Balance) String() string { return proto.CompactTextString(m) }
func (*Balance) ProtoMessage()    {}
func (*Balance) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{9}
}
func (m *Balance) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Balance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Balance.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Balance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Balance.Merge(m, src)
}
func (m *Balance) XXX_Size() int {
	return m.Size()
}
func (m *Balance) XXX_DiscardUnknown() {
	xxx_messageInfo_Balance.DiscardUnknown(m)
}

var xxx_messageInfo_Balance proto.InternalMessageInfo

func (m *Balance) GetCardBalance() int64 {
	if m != nil {
		return m.CardBalance
	}
	return 0
}

func (m *Balance) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

func (*Balance) XXX_MessageName() string {
	return "ovo.Balance"
}

type GetFrontRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrontRequest) Reset()         { *m = GetFrontRequest{} }
func (m *GetFrontRequest) String() string { return proto.CompactTextString(m) }
func (*GetFrontRequest) ProtoMessage()    {}
func (*GetFrontRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{10}
}
func (m *GetFrontRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrontRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrontRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFrontRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrontRequest.Merge(m, src)
}
func (m *GetFrontRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetFrontRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrontRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrontRequest proto.InternalMessageInfo

func (*GetFrontRequest) XXX_MessageName() string {
	return "ovo.GetFrontRequest"
}

type GetFrontResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFrontResponse) Reset()         { *m = GetFrontResponse{} }
func (m *GetFrontResponse) String() string { return proto.CompactTextString(m) }
func (*GetFrontResponse) ProtoMessage()    {}
func (*GetFrontResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{11}
}
func (m *GetFrontResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetFrontResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetFrontResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetFrontResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFrontResponse.Merge(m, src)
}
func (m *GetFrontResponse) XXX_Size() int {
	return m.Size()
}
func (m *GetFrontResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFrontResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFrontResponse proto.InternalMessageInfo

func (*GetFrontResponse) XXX_MessageName() string {
	return "ovo.GetFrontResponse"
}
func init() {
	proto.RegisterEnum("ovo.St", St_name, St_value)
	golang_proto.RegisterEnum("ovo.St", St_name, St_value)
	proto.RegisterType((*Login2FARequest)(nil), "ovo.Login2FARequest")
	golang_proto.RegisterType((*Login2FARequest)(nil), "ovo.Login2FARequest")
	proto.RegisterType((*Login2FAResponse)(nil), "ovo.Login2FAResponse")
	golang_proto.RegisterType((*Login2FAResponse)(nil), "ovo.Login2FAResponse")
	proto.RegisterType((*Login2FAVerifyRequest)(nil), "ovo.Login2FAVerifyRequest")
	golang_proto.RegisterType((*Login2FAVerifyRequest)(nil), "ovo.Login2FAVerifyRequest")
	proto.RegisterType((*Login2FAVerifyResponse)(nil), "ovo.Login2FAVerifyResponse")
	golang_proto.RegisterType((*Login2FAVerifyResponse)(nil), "ovo.Login2FAVerifyResponse")
	proto.RegisterType((*LoginSecurityCodeRequest)(nil), "ovo.LoginSecurityCodeRequest")
	golang_proto.RegisterType((*LoginSecurityCodeRequest)(nil), "ovo.LoginSecurityCodeRequest")
	proto.RegisterType((*LoginSecurityCodeResponse)(nil), "ovo.LoginSecurityCodeResponse")
	golang_proto.RegisterType((*LoginSecurityCodeResponse)(nil), "ovo.LoginSecurityCodeResponse")
	proto.RegisterType((*Budget)(nil), "ovo.Budget")
	golang_proto.RegisterType((*Budget)(nil), "ovo.Budget")
	proto.RegisterType((*GetBudgetRequest)(nil), "ovo.GetBudgetRequest")
	golang_proto.RegisterType((*GetBudgetRequest)(nil), "ovo.GetBudgetRequest")
	proto.RegisterType((*GetBudgetResponse)(nil), "ovo.GetBudgetResponse")
	golang_proto.RegisterType((*GetBudgetResponse)(nil), "ovo.GetBudgetResponse")
	proto.RegisterType((*Balance)(nil), "ovo.Balance")
	golang_proto.RegisterType((*Balance)(nil), "ovo.Balance")
	proto.RegisterType((*GetFrontRequest)(nil), "ovo.GetFrontRequest")
	golang_proto.RegisterType((*GetFrontRequest)(nil), "ovo.GetFrontRequest")
	proto.RegisterType((*GetFrontResponse)(nil), "ovo.GetFrontResponse")
	golang_proto.RegisterType((*GetFrontResponse)(nil), "ovo.GetFrontResponse")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }
func init() { golang_proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 1107 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0x4f, 0x73, 0xdb, 0x44,
	0x14, 0x47, 0x76, 0xeb, 0x38, 0x9b, 0x36, 0x71, 0x96, 0x24, 0x35, 0x4e, 0x31, 0x46, 0x50, 0xc8,
	0xa4, 0xb5, 0x95, 0x1a, 0xda, 0x43, 0x7b, 0x72, 0x3a, 0x6e, 0x26, 0x33, 0x25, 0xcd, 0xd8, 0x10,
	0x66, 0xb8, 0x74, 0xd6, 0xd2, 0xb3, 0xb2, 0x13, 0x49, 0x2b, 0xb4, 0x2b, 0xbb, 0x3e, 0x70, 0x61,
	0x86, 0x33, 0x33, 0x70, 0x63, 0x86, 0xaf, 0xc0, 0x01, 0xbe, 0x00, 0xc7, 0x1e, 0x99, 0xe1, 0x0b,
	0x30, 0x29, 0x07, 0x3e, 0x06, 0xb3, 0x7f, 0x64, 0x3b, 0x8a, 0x03, 0x87, 0x9e, 0xa4, 0xf7, 0xfb,
	0xfd, 0xf4, 0xde, 0xdb, 0xdf, 0x3e, 0xad, 0x84, 0x6e, 0x72, 0x48, 0x46, 0xd4, 0x85, 0x56, 0x9c,
	0x30, 0xc1, 0x70, 0x91, 0x8d, 0x58, 0x6d, 0xdb, 0x67, 0xcc, 0x0f, 0xc0, 0x51, 0xd0, 0x20, 0x1d,
	0x3a, 0x10, 0xc6, 0x62, 0xa2, 0x15, 0xb5, 0xf7, 0xf2, 0xa4, 0xa0, 0x21, 0x70, 0x41, 0xc2, 0xd8,
	0x08, 0xea, 0x79, 0x81, 0x97, 0x26, 0x44, 0x50, 0x16, 0x19, 0xbe, 0x91, 0xe7, 0x87, 0x14, 0x02,
	0xef, 0x45, 0x48, 0xf8, 0x99, 0x51, 0xdc, 0x36, 0x0a, 0x12, 0x53, 0x87, 0x44, 0x11, 0x13, 0xea,
	0x71, 0x6e, 0x58, 0x7d, 0x71, 0x9b, 0x3e, 0x44, 0x4d, 0x16, 0x43, 0x44, 0x62, 0x3a, 0x6a, 0x3b,
	0x2c, 0x56, 0x9a, 0x05, 0xfa, 0xa6, 0x4f, 0xc5, 0x69, 0x3a, 0x68, 0xb9, 0x2c, 0x74, 0x7c, 0xe6,
	0xb3, 0x59, 0x61, 0x19, 0xa9, 0x40, 0xdd, 0x19, 0xf9, 0xc3, 0x39, 0x79, 0x38, 0xa6, 0xe2, 0x8c,
	0x8d, 0x1d, 0x9f, 0x35, 0x15, 0xd9, 0x1c, 0x91, 0x80, 0x7a, 0x44, 0xb0, 0x84, 0x3b, 0xd3, 0x5b,
	0xfd, 0x9c, 0xdd, 0x45, 0x6b, 0xcf, 0x98, 0x4f, 0xa3, 0xf6, 0xd3, 0x4e, 0x0f, 0xbe, 0x4e, 0x81,
	0x0b, 0x5c, 0x43, 0x65, 0x0f, 0xa4, 0xb9, 0x87, 0x5e, 0xd5, 0x6a, 0x58, 0x3b, 0xcb, 0xbd, 0x69,
	0x8c, 0xb7, 0x50, 0x29, 0x64, 0x03, 0x1a, 0x40, 0xb5, 0xa0, 0x18, 0x13, 0xd9, 0x3b, 0xa8, 0x32,
	0x4b, 0xc3, 0x63, 0x16, 0x71, 0xc0, 0x1b, 0xe8, 0x7a, 0x02, 0xc3, 0x69, 0x12, 0x1d, 0xd8, 0xbf,
	0x15, 0xd0, 0x66, 0x26, 0x3d, 0x81, 0x84, 0x0e, 0x27, 0x6f, 0x50, 0x77, 0x56, 0xa3, 0x38, 0x57,
	0x03, 0xd7, 0x11, 0x22, 0x71, 0x7c, 0x02, 0x09, 0xa7, 0x2c, 0xaa, 0x5e, 0x53, 0xd4, 0x1c, 0x22,
	0xf9, 0x90, 0xb8, 0x1d, 0xcf, 0x4b, 0x80, 0xf3, 0xea, 0x75, 0xcd, 0xcf, 0x10, 0x59, 0x8d, 0xf1,
	0x23, 0x12, 0x42, 0xb5, 0xa4, 0xab, 0xe9, 0x08, 0xdf, 0x46, 0xcb, 0x8c, 0x67, 0x69, 0x97, 0x14,
	0x35, 0x03, 0x70, 0x0b, 0xe1, 0x38, 0xe5, 0xa7, 0x47, 0x4c, 0xd0, 0x21, 0x75, 0xd5, 0x66, 0x1e,
	0x7a, 0xd5, 0xb2, 0x92, 0x2d, 0x60, 0xf0, 0x2e, 0xaa, 0x8c, 0xa4, 0x01, 0x06, 0x79, 0xc2, 0x3c,
	0xa8, 0x2e, 0x2b, 0xf5, 0x25, 0xdc, 0xfe, 0xc7, 0x42, 0x5b, 0x79, 0xd7, 0x8c, 0xcd, 0x33, 0x6b,
	0xac, 0xbc, 0x35, 0x10, 0x12, 0x1a, 0x18, 0xc7, 0x74, 0x20, 0x4d, 0x1e, 0xa6, 0x41, 0xa0, 0x16,
	0xa7, 0x3d, 0x9b, 0xc6, 0x78, 0x07, 0xad, 0x51, 0xde, 0x95, 0x32, 0x55, 0x82, 0x82, 0xa7, 0xbc,
	0x2b, 0xf7, 0xf2, 0x30, 0xbe, 0x87, 0xd6, 0x29, 0xef, 0x83, 0x9b, 0x26, 0x54, 0x4c, 0x64, 0x83,
	0x7d, 0x10, 0xca, 0xc7, 0x72, 0xef, 0x32, 0x21, 0xd5, 0x69, 0xec, 0x11, 0x01, 0x1d, 0xd7, 0x05,
	0xce, 0x3f, 0x67, 0x67, 0x10, 0x19, 0x67, 0x2f, 0x13, 0xf6, 0x2f, 0x16, 0xaa, 0xaa, 0xa5, 0xce,
	0xa7, 0xc9, 0x66, 0xe4, 0x23, 0xb4, 0xaa, 0x67, 0xe2, 0x8b, 0x88, 0xbe, 0x94, 0xaf, 0xb0, 0x5a,
	0x74, 0xb1, 0x97, 0x43, 0xb1, 0x8d, 0x6e, 0xf0, 0xb9, 0xc7, 0x8d, 0x07, 0x17, 0xb0, 0xc5, 0x6d,
	0x15, 0xaf, 0x68, 0x0b, 0x57, 0xd1, 0x52, 0x08, 0x9c, 0x13, 0x1f, 0xcc, 0x40, 0x65, 0xa1, 0xfd,
	0x73, 0x01, 0xbd, 0xb3, 0xa0, 0xe1, 0xd9, 0x5b, 0x20, 0x54, 0x66, 0xf3, 0x16, 0xa8, 0x40, 0x4e,
	0x92, 0xba, 0xe9, 0x03, 0x78, 0xa6, 0xb9, 0x19, 0xa0, 0xd8, 0xec, 0x78, 0x52, 0x1d, 0x15, 0x7b,
	0x33, 0x40, 0xce, 0xd9, 0x54, 0xda, 0x7d, 0x19, 0xd3, 0x04, 0xbc, 0x8e, 0x50, 0x4d, 0x15, 0x7b,
	0x0b, 0x18, 0xe5, 0x19, 0xe5, 0x71, 0x40, 0x26, 0x9f, 0x99, 0x05, 0xe8, 0x89, 0xcf, 0xa1, 0x8b,
	0xb6, 0xbf, 0x7c, 0xe5, 0xf6, 0x5f, 0x76, 0x6e, 0xf9, 0xaa, 0x0d, 0x6d, 0xa0, 0xd2, 0x7e, 0xea,
	0xf9, 0x20, 0xe4, 0xa8, 0x92, 0x90, 0xa5, 0x91, 0x30, 0xbb, 0x66, 0x22, 0x1b, 0xa3, 0xca, 0x01,
	0x08, 0x2d, 0x32, 0x3b, 0x6d, 0x7f, 0x67, 0xa1, 0xf5, 0x39, 0xd0, 0xb8, 0xf9, 0x01, 0x2a, 0x0d,
	0x14, 0xa2, 0x32, 0xac, 0xb4, 0x57, 0x5a, 0x6c, 0xc4, 0x5a, 0x46, 0x64, 0x28, 0xfc, 0x21, 0xba,
	0x29, 0x98, 0x20, 0x41, 0x3f, 0x86, 0xc8, 0xa3, 0x91, 0xaf, 0x0c, 0x2e, 0xf6, 0x2e, 0x82, 0xf8,
	0x0e, 0x5a, 0xe2, 0x69, 0x18, 0x92, 0x64, 0x52, 0x2d, 0x36, 0x8a, 0xf9, 0x5c, 0x19, 0x67, 0x77,
	0xd1, 0xd2, 0x3e, 0x09, 0x48, 0xe4, 0x02, 0x7e, 0x1f, 0xdd, 0x70, 0x49, 0xe2, 0xbd, 0x18, 0xe8,
	0xd8, 0x2c, 0x62, 0x45, 0x62, 0x99, 0xe4, 0x16, 0x5a, 0x52, 0x92, 0x88, 0x65, 0x07, 0x95, 0x0c,
	0x8f, 0x98, 0xbd, 0x8e, 0xd6, 0x0e, 0x40, 0x3c, 0x4d, 0x58, 0x34, 0x5d, 0xa1, 0x5e, 0xb5, 0x81,
	0xf4, 0xfa, 0x76, 0x37, 0x50, 0x81, 0x0b, 0x5c, 0x42, 0x05, 0xee, 0x55, 0xde, 0x52, 0x57, 0xb7,
	0x62, 0xb5, 0x7f, 0xbd, 0x86, 0x56, 0x8f, 0x13, 0x2a, 0xfb, 0xe9, 0xeb, 0xef, 0x1e, 0xf6, 0x50,
	0x39, 0x30, 0xe7, 0x01, 0xde, 0x50, 0x8d, 0xe7, 0x8e, 0xf1, 0xda, 0x66, 0x0e, 0xd5, 0x15, 0xec,
	0xbb, 0xdf, 0xfe, 0xf9, 0xf7, 0x8f, 0x85, 0x3b, 0x76, 0xc3, 0x19, 0xb5, 0x5b, 0x7b, 0xfa, 0x63,
	0x95, 0x8a, 0x53, 0xc7, 0x4d, 0xb9, 0x60, 0x21, 0x24, 0x4e, 0x96, 0xf6, 0x91, 0xb5, 0x8b, 0xbf,
	0x41, 0xab, 0x17, 0x4f, 0x1d, 0x5c, 0xbb, 0x90, 0xf5, 0xc2, 0x01, 0x5e, 0xdb, 0x5e, 0xc8, 0x99,
	0xba, 0x6d, 0x55, 0xf7, 0x9e, 0xfd, 0xf1, 0xff, 0xd5, 0x75, 0xd4, 0xe1, 0x37, 0x91, 0xe5, 0xbf,
	0xb7, 0xd0, 0xfa, 0xa5, 0x37, 0x0b, 0xbf, 0x3b, 0x2b, 0xb3, 0xe0, 0x88, 0xa8, 0xd5, 0xaf, 0xa2,
	0x4d, 0x23, 0x8f, 0x55, 0x23, 0x0f, 0xec, 0xbd, 0xff, 0x6c, 0x64, 0xfe, 0xd1, 0xb9, 0x8e, 0xbe,
	0x44, 0xcb, 0x7e, 0x36, 0x94, 0x58, 0x3b, 0x9c, 0x9f, 0xdc, 0xda, 0x56, 0x1e, 0x36, 0x85, 0xb7,
	0x55, 0xe1, 0x4d, 0xfc, 0xb6, 0x33, 0xba, 0xdf, 0xda, 0x73, 0xf4, 0xb0, 0x3a, 0x1e, 0x08, 0x79,
	0x2e, 0x1f, 0xa3, 0xb2, 0x6f, 0x86, 0xc1, 0xec, 0x67, 0x6e, 0x5c, 0x6a, 0x9b, 0x39, 0xd4, 0x64,
	0xbd, 0xa5, 0xb2, 0xae, 0xe3, 0x35, 0x9d, 0x55, 0x2e, 0x67, 0x28, 0x05, 0xed, 0x0a, 0x5a, 0x3d,
	0x20, 0x02, 0xc6, 0x24, 0x9b, 0x99, 0xfd, 0x9f, 0xac, 0x1f, 0x3a, 0x3e, 0x1e, 0x20, 0xfc, 0xfc,
	0xe4, 0x79, 0xa3, 0x73, 0x7c, 0xd8, 0x48, 0x23, 0x36, 0x1c, 0x52, 0x97, 0x92, 0x00, 0x57, 0x7a,
	0x30, 0x82, 0x84, 0x83, 0xd7, 0x00, 0x8f, 0xca, 0xcf, 0xce, 0xee, 0x03, 0x54, 0xea, 0xc4, 0xc4,
	0x3d, 0x05, 0x7c, 0xf7, 0x54, 0x88, 0x98, 0x3f, 0x72, 0x9c, 0xf1, 0x78, 0xdc, 0x22, 0x0a, 0x6b,
	0xb1, 0xc4, 0x77, 0x02, 0xea, 0x42, 0xc4, 0x81, 0x3b, 0xcf, 0x0e, 0x9f, 0x74, 0x8f, 0xfa, 0xdd,
	0x66, 0xbb, 0xb5, 0xd7, 0x2e, 0xde, 0x6f, 0xed, 0xed, 0x5a, 0x85, 0x57, 0xe7, 0x75, 0xeb, 0x8f,
	0xf3, 0xba, 0xf5, 0xd7, 0x79, 0xdd, 0xfa, 0xfd, 0x75, 0xdd, 0x7a, 0xf5, 0xba, 0x6e, 0x7d, 0x55,
	0x9b, 0xfb, 0x49, 0xa1, 0xf4, 0xe1, 0xa7, 0xf2, 0x0f, 0x85, 0x8d, 0xd8, 0x63, 0x1f, 0xa2, 0x41,
	0x49, 0xfd, 0x8f, 0x7c, 0xf2, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x49, 0xdc, 0xd5, 0x79, 0xda,
	0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PrimaryServiceClient is the client API for PrimaryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PrimaryServiceClient interface {
	Login2FA(ctx context.Context, in *Login2FARequest, opts ...grpc.CallOption) (*Login2FAResponse, error)
	Login2FAVerify(ctx context.Context, in *Login2FAVerifyRequest, opts ...grpc.CallOption) (*Login2FAVerifyResponse, error)
	LoginSecurityCode(ctx context.Context, in *LoginSecurityCodeRequest, opts ...grpc.CallOption) (*LoginSecurityCodeResponse, error)
	GetBudget(ctx context.Context, in *GetBudgetRequest, opts ...grpc.CallOption) (*GetBudgetResponse, error)
	GetFront(ctx context.Context, in *GetFrontRequest, opts ...grpc.CallOption) (*GetFrontResponse, error)
}

type primaryServiceClient struct {
	cc *grpc.ClientConn
}

func NewPrimaryServiceClient(cc *grpc.ClientConn) PrimaryServiceClient {
	return &primaryServiceClient{cc}
}

func (c *primaryServiceClient) Login2FA(ctx context.Context, in *Login2FARequest, opts ...grpc.CallOption) (*Login2FAResponse, error) {
	out := new(Login2FAResponse)
	err := c.cc.Invoke(ctx, "/ovo.PrimaryService/login2FA", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *primaryServiceClient) Login2FAVerify(ctx context.Context, in *Login2FAVerifyRequest, opts ...grpc.CallOption) (*Login2FAVerifyResponse, error) {
	out := new(Login2FAVerifyResponse)
	err := c.cc.Invoke(ctx, "/ovo.PrimaryService/Login2FAVerify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *primaryServiceClient) LoginSecurityCode(ctx context.Context, in *LoginSecurityCodeRequest, opts ...grpc.CallOption) (*LoginSecurityCodeResponse, error) {
	out := new(LoginSecurityCodeResponse)
	err := c.cc.Invoke(ctx, "/ovo.PrimaryService/LoginSecurityCode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *primaryServiceClient) GetBudget(ctx context.Context, in *GetBudgetRequest, opts ...grpc.CallOption) (*GetBudgetResponse, error) {
	out := new(GetBudgetResponse)
	err := c.cc.Invoke(ctx, "/ovo.PrimaryService/getBudget", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *primaryServiceClient) GetFront(ctx context.Context, in *GetFrontRequest, opts ...grpc.CallOption) (*GetFrontResponse, error) {
	out := new(GetFrontResponse)
	err := c.cc.Invoke(ctx, "/ovo.PrimaryService/getFront", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PrimaryServiceServer is the server API for PrimaryService service.
type PrimaryServiceServer interface {
	Login2FA(context.Context, *Login2FARequest) (*Login2FAResponse, error)
	Login2FAVerify(context.Context, *Login2FAVerifyRequest) (*Login2FAVerifyResponse, error)
	LoginSecurityCode(context.Context, *LoginSecurityCodeRequest) (*LoginSecurityCodeResponse, error)
	GetBudget(context.Context, *GetBudgetRequest) (*GetBudgetResponse, error)
	GetFront(context.Context, *GetFrontRequest) (*GetFrontResponse, error)
}

// UnimplementedPrimaryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPrimaryServiceServer struct {
}

func (*UnimplementedPrimaryServiceServer) Login2FA(ctx context.Context, req *Login2FARequest) (*Login2FAResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login2FA not implemented")
}
func (*UnimplementedPrimaryServiceServer) Login2FAVerify(ctx context.Context, req *Login2FAVerifyRequest) (*Login2FAVerifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Login2FAVerify not implemented")
}
func (*UnimplementedPrimaryServiceServer) LoginSecurityCode(ctx context.Context, req *LoginSecurityCodeRequest) (*LoginSecurityCodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginSecurityCode not implemented")
}
func (*UnimplementedPrimaryServiceServer) GetBudget(ctx context.Context, req *GetBudgetRequest) (*GetBudgetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBudget not implemented")
}
func (*UnimplementedPrimaryServiceServer) GetFront(ctx context.Context, req *GetFrontRequest) (*GetFrontResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFront not implemented")
}

func RegisterPrimaryServiceServer(s *grpc.Server, srv PrimaryServiceServer) {
	s.RegisterService(&_PrimaryService_serviceDesc, srv)
}

func _PrimaryService_Login2FA_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Login2FARequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimaryServiceServer).Login2FA(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ovo.PrimaryService/Login2FA",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimaryServiceServer).Login2FA(ctx, req.(*Login2FARequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrimaryService_Login2FAVerify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Login2FAVerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimaryServiceServer).Login2FAVerify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ovo.PrimaryService/Login2FAVerify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimaryServiceServer).Login2FAVerify(ctx, req.(*Login2FAVerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrimaryService_LoginSecurityCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginSecurityCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimaryServiceServer).LoginSecurityCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ovo.PrimaryService/LoginSecurityCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimaryServiceServer).LoginSecurityCode(ctx, req.(*LoginSecurityCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrimaryService_GetBudget_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBudgetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimaryServiceServer).GetBudget(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ovo.PrimaryService/GetBudget",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimaryServiceServer).GetBudget(ctx, req.(*GetBudgetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PrimaryService_GetFront_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFrontRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PrimaryServiceServer).GetFront(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ovo.PrimaryService/GetFront",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PrimaryServiceServer).GetFront(ctx, req.(*GetFrontRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PrimaryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ovo.PrimaryService",
	HandlerType: (*PrimaryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "login2FA",
			Handler:    _PrimaryService_Login2FA_Handler,
		},
		{
			MethodName: "Login2FAVerify",
			Handler:    _PrimaryService_Login2FAVerify_Handler,
		},
		{
			MethodName: "LoginSecurityCode",
			Handler:    _PrimaryService_LoginSecurityCode_Handler,
		},
		{
			MethodName: "getBudget",
			Handler:    _PrimaryService_GetBudget_Handler,
		},
		{
			MethodName: "getFront",
			Handler:    _PrimaryService_GetFront_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}

// GatewayServiceClient is the client API for GatewayService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GatewayServiceClient interface {
}

type gatewayServiceClient struct {
	cc *grpc.ClientConn
}

func NewGatewayServiceClient(cc *grpc.ClientConn) GatewayServiceClient {
	return &gatewayServiceClient{cc}
}

// GatewayServiceServer is the server API for GatewayService service.
type GatewayServiceServer interface {
}

// UnimplementedGatewayServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGatewayServiceServer struct {
}

func RegisterGatewayServiceServer(s *grpc.Server, srv GatewayServiceServer) {
	s.RegisterService(&_GatewayService_serviceDesc, srv)
}

var _GatewayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ovo.GatewayService",
	HandlerType: (*GatewayServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "service.proto",
}

func (m *Login2FARequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Login2FARequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Login2FARequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintService(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DeviceId) > 0 {
		i -= len(m.DeviceId)
		copy(dAtA[i:], m.DeviceId)
		i = encodeVarintService(dAtA, i, uint64(len(m.DeviceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Login2FAResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Login2FAResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Login2FAResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RefId) > 0 {
		i -= len(m.RefId)
		copy(dAtA[i:], m.RefId)
		i = encodeVarintService(dAtA, i, uint64(len(m.RefId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Login2FAVerifyRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Login2FAVerifyRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Login2FAVerifyRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.VerificationCode) > 0 {
		i -= len(m.VerificationCode)
		copy(dAtA[i:], m.VerificationCode)
		i = encodeVarintService(dAtA, i, uint64(len(m.VerificationCode)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.PushNotificationId) > 0 {
		i -= len(m.PushNotificationId)
		copy(dAtA[i:], m.PushNotificationId)
		i = encodeVarintService(dAtA, i, uint64(len(m.PushNotificationId)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.OsVersion) > 0 {
		i -= len(m.OsVersion)
		copy(dAtA[i:], m.OsVersion)
		i = encodeVarintService(dAtA, i, uint64(len(m.OsVersion)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.OsName) > 0 {
		i -= len(m.OsName)
		copy(dAtA[i:], m.OsName)
		i = encodeVarintService(dAtA, i, uint64(len(m.OsName)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MacAddress) > 0 {
		i -= len(m.MacAddress)
		copy(dAtA[i:], m.MacAddress)
		i = encodeVarintService(dAtA, i, uint64(len(m.MacAddress)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AppVersion) > 0 {
		i -= len(m.AppVersion)
		copy(dAtA[i:], m.AppVersion)
		i = encodeVarintService(dAtA, i, uint64(len(m.AppVersion)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.RefId) > 0 {
		i -= len(m.RefId)
		copy(dAtA[i:], m.RefId)
		i = encodeVarintService(dAtA, i, uint64(len(m.RefId)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintService(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DeviceId) > 0 {
		i -= len(m.DeviceId)
		copy(dAtA[i:], m.DeviceId)
		i = encodeVarintService(dAtA, i, uint64(len(m.DeviceId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Login2FAVerifyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Login2FAVerifyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Login2FAVerifyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdateAccessToken) > 0 {
		i -= len(m.UpdateAccessToken)
		copy(dAtA[i:], m.UpdateAccessToken)
		i = encodeVarintService(dAtA, i, uint64(len(m.UpdateAccessToken)))
		i--
		dAtA[i] = 0x32
	}
	if m.IsSecurityCodeSet {
		i--
		if m.IsSecurityCodeSet {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.IsEmailVerified {
		i--
		if m.IsEmailVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if len(m.FullName) > 0 {
		i -= len(m.FullName)
		copy(dAtA[i:], m.FullName)
		i = encodeVarintService(dAtA, i, uint64(len(m.FullName)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Email) > 0 {
		i -= len(m.Email)
		copy(dAtA[i:], m.Email)
		i = encodeVarintService(dAtA, i, uint64(len(m.Email)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Mobile) > 0 {
		i -= len(m.Mobile)
		copy(dAtA[i:], m.Mobile)
		i = encodeVarintService(dAtA, i, uint64(len(m.Mobile)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *LoginSecurityCodeRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoginSecurityCodeRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoginSecurityCodeRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintService(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.UpdateAccessToken) > 0 {
		i -= len(m.UpdateAccessToken)
		copy(dAtA[i:], m.UpdateAccessToken)
		i = encodeVarintService(dAtA, i, uint64(len(m.UpdateAccessToken)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SecurityCode) > 0 {
		i -= len(m.SecurityCode)
		copy(dAtA[i:], m.SecurityCode)
		i = encodeVarintService(dAtA, i, uint64(len(m.SecurityCode)))
		i--
		dAtA[i] = 0x12
	}
	if m.DeviceUnixtime != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.DeviceUnixtime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *LoginSecurityCodeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LoginSecurityCodeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LoginSecurityCodeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.UpdateAccessToken) > 0 {
		i -= len(m.UpdateAccessToken)
		copy(dAtA[i:], m.UpdateAccessToken)
		i = encodeVarintService(dAtA, i, uint64(len(m.UpdateAccessToken)))
		i--
		dAtA[i] = 0x4a
	}
	if m.IsEmailVerified {
		i--
		if m.IsEmailVerified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.DisplayMessage) > 0 {
		i -= len(m.DisplayMessage)
		copy(dAtA[i:], m.DisplayMessage)
		i = encodeVarintService(dAtA, i, uint64(len(m.DisplayMessage)))
		i--
		dAtA[i] = 0x2a
	}
	if m.TokenSeedExpiredAt != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.TokenSeedExpiredAt))
		i--
		dAtA[i] = 0x20
	}
	if m.Timestamp != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Timestamp))
		i--
		dAtA[i] = 0x18
	}
	if len(m.TokenSeed) > 0 {
		i -= len(m.TokenSeed)
		copy(dAtA[i:], m.TokenSeed)
		i = encodeVarintService(dAtA, i, uint64(len(m.TokenSeed)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Token) > 0 {
		i -= len(m.Token)
		copy(dAtA[i:], m.Token)
		i = encodeVarintService(dAtA, i, uint64(len(m.Token)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Budget) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Budget) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Budget) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Amount != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.Amount))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetBudgetRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBudgetRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBudgetRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetBudgetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetBudgetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetBudgetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Summary) > 0 {
		for iNdEx := len(m.Summary) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Summary[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if m.TotalSpending != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.TotalSpending))
		i--
		dAtA[i] = 0x10
	}
	if m.Budget != nil {
		{
			size, err := m.Budget.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintService(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *Balance) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Balance) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Balance) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CardNo) > 0 {
		i -= len(m.CardNo)
		copy(dAtA[i:], m.CardNo)
		i = encodeVarintService(dAtA, i, uint64(len(m.CardNo)))
		i--
		dAtA[i] = 0x12
	}
	if m.CardBalance != 0 {
		i = encodeVarintService(dAtA, i, uint64(m.CardBalance))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetFrontRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrontRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFrontRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *GetFrontResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetFrontResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetFrontResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintService(dAtA []byte, offset int, v uint64) int {
	offset -= sovService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Login2FARequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeviceId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Login2FAResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.RefId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Login2FAVerifyRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DeviceId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.RefId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.AppVersion)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.MacAddress)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.OsName)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.OsVersion)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.PushNotificationId)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.VerificationCode)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Login2FAVerifyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Mobile)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Email)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.FullName)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.IsEmailVerified {
		n += 2
	}
	if m.IsSecurityCodeSet {
		n += 2
	}
	l = len(m.UpdateAccessToken)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoginSecurityCodeRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.DeviceUnixtime != 0 {
		n += 1 + sovService(uint64(m.DeviceUnixtime))
	}
	l = len(m.SecurityCode)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.UpdateAccessToken)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *LoginSecurityCodeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Token)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	l = len(m.TokenSeed)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.Timestamp != 0 {
		n += 1 + sovService(uint64(m.Timestamp))
	}
	if m.TokenSeedExpiredAt != 0 {
		n += 1 + sovService(uint64(m.TokenSeedExpiredAt))
	}
	l = len(m.DisplayMessage)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.IsEmailVerified {
		n += 2
	}
	l = len(m.UpdateAccessToken)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Budget) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Amount != 0 {
		n += 1 + sovService(uint64(m.Amount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBudgetRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetBudgetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Budget != nil {
		l = m.Budget.Size()
		n += 1 + l + sovService(uint64(l))
	}
	if m.TotalSpending != 0 {
		n += 1 + sovService(uint64(m.TotalSpending))
	}
	if len(m.Summary) > 0 {
		for _, e := range m.Summary {
			l = e.Size()
			n += 1 + l + sovService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *Balance) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CardBalance != 0 {
		n += 1 + sovService(uint64(m.CardBalance))
	}
	l = len(m.CardNo)
	if l > 0 {
		n += 1 + l + sovService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetFrontRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetFrontResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozService(x uint64) (n int) {
	return sovService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Login2FARequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Login2FARequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Login2FARequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Login2FAResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Login2FAResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Login2FAResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Login2FAVerifyRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Login2FAVerifyRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Login2FAVerifyRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RefId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RefId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AppVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MacAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MacAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OsName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OsVersion", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OsVersion = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PushNotificationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PushNotificationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VerificationCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VerificationCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Login2FAVerifyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Login2FAVerifyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Login2FAVerifyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Mobile", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Mobile = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Email", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Email = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field FullName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.FullName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsEmailVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsEmailVerified = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsSecurityCodeSet", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsSecurityCodeSet = bool(v != 0)
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateAccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoginSecurityCodeRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoginSecurityCodeRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoginSecurityCodeRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceUnixtime", wireType)
			}
			m.DeviceUnixtime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.DeviceUnixtime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SecurityCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SecurityCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateAccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *LoginSecurityCodeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LoginSecurityCodeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LoginSecurityCodeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Token", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Token = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenSeed", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TokenSeed = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
			}
			m.Timestamp = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Timestamp |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TokenSeedExpiredAt", wireType)
			}
			m.TokenSeedExpiredAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TokenSeedExpiredAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DisplayMessage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DisplayMessage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsEmailVerified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsEmailVerified = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateAccessToken", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.UpdateAccessToken = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Budget) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Budget: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Budget: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			m.Amount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Amount |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBudgetRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBudgetRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBudgetRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetBudgetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetBudgetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetBudgetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Budget", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Budget == nil {
				m.Budget = &Budget{}
			}
			if err := m.Budget.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TotalSpending", wireType)
			}
			m.TotalSpending = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TotalSpending |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Summary", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Summary = append(m.Summary, &Budget{})
			if err := m.Summary[len(m.Summary)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Balance) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Balance: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Balance: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardBalance", wireType)
			}
			m.CardBalance = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CardBalance |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CardNo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CardNo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrontRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrontRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrontRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetFrontResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetFrontResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetFrontResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupService = fmt.Errorf("proto: unexpected end of group")
)
